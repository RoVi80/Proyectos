#!/usr/bin/env python3

# solution of Task 1
def read_csv(path):
    res = []
    # implement this function
    with open(path, "r") as f:
        for line in f.readlines():
            line = line[:-1]
            if len(line) == 0:
                continue

            t = tuple(line.split(","))
            res.append(t)
    return res


# First extract the possible values for the two attributes "Survived" and "Gender"
gender = {}
survived = {}
# reuse 'read_csv' from the previous task (copy in)
for record in read_csv("public/titanic.csv"):
    survived[record[0]] = 1
    gender[record[3]] = 1
print(sorted(gender.keys()))
print(sorted(survived.keys()))

# sample solution for Task 2
def preprocess(records):

    vals = []
    res = (records[0], vals)

    # these lists have been generated by iterating over all records in
    # the titanic.csv file and storing the possible values
    survived = ['Alive', 'Survived', 'T', 'True', 'Yes', 'survived', 't', 'true', 'yes']
    killed = ['Dead', 'F', 'False', 'No', 'Survived=dead', 'dead', 'f', 'false', 'no']
    male = ['male', 'Male', 'm', 'M']
    female = ['female', 'Female', 'f', 'F']

    for r in records[1:]:

        l = []

        # survived
        if r[0] in survived:
            l.append(True)
        elif r[0] in killed:
            l.append(False)
        else:
            continue

        # ticket class
        if not r[1]:
            continue
        t_class = int(r[1])
        if t_class in [1,2,3]:
            l.append(t_class)
        else:
            continue

        # name
        if not r[2]:
            continue
        l.append(r[2])

        # gender
        if r[3] in male:
            l.append("male")
        elif r[3] in female:
            l.append("female")
        else:
            continue

        # age
        if not r[4]:
            continue
        age = float(r[4])
        if 0 < age <= 100:
            l.append(age)
        else:
            continue

        # fare
        if not r[5]:
            l.append(25.0)
        else:
            fare = float(r[5])
            if fare >= 0:
                l.append(fare)
            else:
                l.append(25.0)

        vals.append(tuple(l))

    return res



# The following part calls the function and prints the return
# value to the Console. This way you can check what it does.
# However, we encourage you to write tests, because then you
# can easily test many different values on every "Test & Run"!

# Investigate the 'titanic.csv' file before you attempt a submission.
# You might want to download the file to your machine and open it with the function that you have written in Task 1.
# The following example is not complete.

titanic = [
    ('Survived', 'Pclass', 'Name', 'Gender', 'Age', 'Fare'),
    ('no', '3', 'Braund Mr. Owen Harris', 'male', '22', '7.25'),
    ('no', '3', 'Braund Ms. Maria', 'Female', '22', ''),
    ('Yes', '1', 'Cumings Mrs. John Bradley (Florence Briggs Thayer)', 'F', '38', '71.28'),
    ('', '3', 'Vander Planke Miss. Augusta Maria', 'female', '', ''),
    ('Dead', '4', 'Lennon Mr. Denis', 'male', '13', '15.5')
    # ...
]

print(preprocess(titanic))
